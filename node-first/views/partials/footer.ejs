<footer class="footer">
    <div style="width: 90%;">
        &copy <%= new Date().getFullYear(); %> Sono il Footer
    </div>
    <div id="chatBtn" style="width: 10%; background-color: black;" onclick="hideChat()">
        chat
        <div id="chatWindow" class="d-none" style="color: black;">
            <div class="userList">

            </div>
            <div class="rightBox">
                <div class="chatBox">
                       
                </div>
                <input type="text" style="height: 5%;">
            </div>
        </div>
    </div>   
</footer>

<script>
    // Function to fetch conversations and display them
    async function fetchConversationsAndDisplay() {
        try {
            // Make a GET request to fetch conversations
            const response = await fetch('/conversations');
            
            const conversations = await response.json();
            console.log(conversations)
            // Display conversations in the chat panel
            const chatWindow = document.getElementById('chatWindow');
            const userList = chatWindow.querySelector('.userList');

            // Clear existing conversations
            userList.innerHTML = '';

            // Display each conversation in the chat panel
            conversations.forEach(conversation => {
              const userListItem = document.createElement('div');
              if (conversation.participants && Array.isArray(conversation.participants)) {
                userListItem.innerHTML = `
                <div data-user-id="${conversation._id}">${conversation.participants}</div>
                `
                userListItem.addEventListener('click', () => {
                    fetchSingleConversationAndDisplay(conversation._id); // Call fetchSingleConversationAndDisplay with conversation ID
                });
              }  
              document.querySelector('.userList').appendChild(userListItem);
            });

            // Show the chat panel
            chatWindow.classList.remove('d-none');
            chatWindow.classList.add('d-flex');
        } catch (error) {
            console.error('Error fetching conversations:', error);
        }
    }

    // Event listener for the chat button
    document.getElementById('chatBtn').addEventListener('click', () => {
        // Call the function to fetch conversations and display them
        fetchConversationsAndDisplay();
        if ($('#chatBtn').hasClass('red')){
            $('#chatBtn').removeClass('red');
        }
    });

    async function fetchSingleConversationAndDisplay(conversationId) {
    try {
        // Make a GET request to fetch messages for the specified conversation
        const response = await fetch(`/conversations/${conversationId}`);
        
        const conversation = await response.json();
        
        const userId = conversation.user;
        
        // Display messages in the chat panel
        const chatBox = document.querySelector('.chatBox');

        // Clear existing messages
        chatBox.innerHTML = '';

        // Display each message in the chat panel
        conversation.conversation.messages.forEach(message => {
            const messageElement = document.createElement('div');
            messageElement.textContent = message.body;
            messageElement.classList.add(message.user === userId ? 'msg-sent' : 'msg-received'); // Apply appropriate class based on message sender
            chatBox.appendChild(messageElement);
        });
    } catch (error) {
        console.error('Error fetching messages for conversation:', error);
    }
}
</script>